package com.pdachoice.mobilesearch;

import java.util.Arrays;

import android.app.SearchManager;
import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.ListFragment;
import android.support.v7.widget.SearchView;
import android.support.v7.widget.SearchView.OnQueryTextListener;
import android.util.Log;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.ListView;

public class MasterListFragment extends ListFragment implements OnQueryTextListener {

//  ArrayAdapter<Date> mListAdapter;
//
//  @Override
//  public void onCreate(Bundle savedInstanceState) {
//    super.onCreate(savedInstanceState);
//    setHasOptionsMenu(true); // enable Option Menu.
//
//    // setup ListView data source
//    mListAdapter = new ArrayAdapter<Date>(getActivity(),
//        android.R.layout.simple_list_item_1, new ArrayList<Date>());
//    this.setListAdapter(mListAdapter);
//  }
  
  private static final String[] items = { "a", "ab", "abc", "abcd", "abcde",
    "abcdef", "abcdefg" };

  ArrayAdapter<String> myListAdapter;

  @Override
  public void onCreate(Bundle savedInstanceState) {
     super.onCreate(savedInstanceState);

     myListAdapter = new ArrayAdapter<String>(getActivity(),
           android.R.layout.simple_list_item_1, Arrays.asList(items));
     this.setListAdapter(myListAdapter);

     setHasOptionsMenu(true);
  }


  // render option menu from resource file, menu.xml
  @Override
  public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
    inflater.inflate(R.menu.main, menu);
    
 // Get the SearchView and set the searchable configuration
    SearchManager searchManager = (SearchManager) getActivity().getSystemService(Context.SEARCH_SERVICE);
    SearchView searchView = (SearchView) menu.findItem(R.id.menuAction).getActionView();
    // Assumes current activity is the searchable activity
    searchView.setSearchableInfo(searchManager.getSearchableInfo(getActivity().getComponentName()));
    searchView.setIconifiedByDefault(false); // Do not iconify the widget; expand it by default

  }

  // callback method when menu items are selected.
  @Override
  public boolean onOptionsItemSelected(MenuItem item) {
    // TODO
    return true;
  }

  // callback method when list item is selected.
  @Override
  public void onListItemClick(ListView l, View v, int position, long id) {
    Fragment detailFragment = new DetailFragment();

    Bundle parms = new Bundle();
//    Date timestamp = mListAdapter.getItem(position);
    
    parms.putString("ts", items[position]);
    detailFragment.setArguments(parms); // pass data to other Fragment

    ((MainActivity) getActivity()).pushToNavigationStack(detailFragment, true);
  }
  
  @Override
  public void onResume() {
     super.onResume();
     getActivity().setTitle("Master List");  // or Detail
  }


  @Override
  public boolean onQueryTextChange(String query) {
    Log.d(tag, "onQueryTextSubmit: " + query);
    searchView.setQuery(query, false); // leave query text in SearchView
    this.getView().requestFocus(); // dismiss soft keyboard
    doSearch(query);
    return true;
  }


  @Override
  public boolean onQueryTextSubmit(String arg0) {
    // TODO Auto-generated method stub
    return false;
  }

}
